openapi: 3.0.1
info:
  title: Ecommerce APIs
  description: Open API specifications for Ecommerce Application
  version: 1

paths:

  /products:
    get:
      operationId: getAllProducts

      responses:
        200:
          description: success, list of all products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productList'
        500:
          description: Internal error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /products/{id}:
    get:
      operationId: getProduct
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: productId

      responses:
        200:
          description: success, product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        404:
          description: product not found
        500:
          description: Internal error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /products/search:
    get:
      operationId: searchProduct
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: List of products

      responses:
        200:
          description: success, product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productList'
        500:
          description: Internal error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /news:
    get:
      operationId: getAllNews

      responses:
        200:
          description: success, list of all new
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newsList'
        500:
          description: Internal error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /admin/product/add:
    post:
      operationId: addProduct
      description: addProduct

      parameters:
        - in: header
          name: X-API-KEY
          schema:
            type: string
            format: uuid
          required: true

      requestBody:
        description: The required body to initiate payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'

      responses:
        200:
          description: OK returned if payment is initiated
        500:
          description: Internal error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        400:
          description: Bad request

  /admin/product/update:
    post:
      operationId: updateProduct
      description: updateProduct

      parameters:
        - in: header
          name: X-API-KEY
          schema:
            type: string
            format: uuid
          required: true

      requestBody:
        description: The required body to initiate payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'

      responses:
        200:
          description: OK returned if payment is initiated
        500:
          description: Internal error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        400:
          description: Bad request

  /admin/product/delete/{id}:
    delete:
      operationId: deleteProduct
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: productId
        - in: header
          name: X-API-KEY
          schema:
            type: string
            format: uuid
          required: true

      responses:
        200:
          description: OK
        404:
          description: product not found
        500:
          description: Something not OK
components:
  schemas:
    productList:
      type: array
      items:
        $ref: '#/components/schemas/product'

    product:
      type: object
      required:
        - id
        - name
        - description
        - price
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double

    newsList:
      type: array
      items:
        $ref: '#/components/schemas/news'

    news:
      type: object
      required:
        - id
        - title
        - shortDescription
        - longDescription
        - imageUrl
      properties:
        id:
          type: string
        title:
          type: string
        shortDescription:
          type: string
        longDescription:
          type: string
        imageUrl:
          type: string

    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
